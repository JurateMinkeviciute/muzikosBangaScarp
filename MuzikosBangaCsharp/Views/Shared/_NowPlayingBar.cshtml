<script>

    $(document).ready(function () {

        var newPlaylist;
        $.get("getRandom10Songs", function (list) {
            newPlaylist = list;
                                                                                                    console.log(newPlaylist);
            setTrack(newPlaylist[0], newPlaylist, false);
                                                                                                    console.log(newPlaylist[0]);
        });
        audioElement = new Audio();
        updateVolumeProgressBar(audioElement.audio);


        $("#nowPlayingBarContainer").on("mousedown touchstart mousemove touchmove", function (e) {
            e.preventDefault();
        });


        $(".playbackBar .progressBar").mousedown(function () {
            mouseDown = true;
        });

        $(".playbackBar .progressBar").mousemove(function (e) {
            if (mouseDown == true) {
                //Set time of song, depending on position of mouse
                timeFromOffset(e, this);
            }
        });

        $(".playbackBar .progressBar").mouseup(function (e) {
            timeFromOffset(e, this);
        });


        $(".volumeBar .progressBar").mousedown(function () {
            mouseDown = true;
        });

        $(".volumeBar .progressBar").mousemove(function (e) {
            if (mouseDown == true) {

                var percentage = e.offsetX / $(this).width();

                if (percentage >= 0 && percentage <= 1) {
                    audioElement.audio.volume = percentage;
                }
            }
        });

        $(".volumeBar .progressBar").mouseup(function (e) {
            var percentage = e.offsetX / $(this).width();

            if (percentage >= 0 && percentage <= 1) {
                audioElement.audio.volume = percentage;
            }
        });

        $(document).mouseup(function () {
            mouseDown = false;
        });




    });

    function timeFromOffset(mouse, progressBar) {
        var percentage = mouse.offsetX / $(progressBar).width() * 100;
        var seconds = audioElement.audio.duration * (percentage / 100);
        audioElement.setTime(seconds);
    }

    function prevSong() {
        if (audioElement.audio.currentTime >= 3 || currentIndex == 0) {
            audioElement.setTime(0);
        }
        else {
            currentIndex = currentIndex - 1;
            setTrack(currentPlaylist[currentIndex], currentPlaylist, true);
        }
    }

    function nextSong() {
        console.log("********** nextSong() **************** ");
        console.log("currentIndex " + currentIndex);
        if (repeat == true) {
            audioElement.setTime(0);
            playSong();
            return;
        }
        console.log("currentIndex " + currentIndex);
        if (currentIndex == currentPlaylist.length - 1) {
            currentIndex = 0;
        }
        else {
            currentIndex++;
        }
        console.log("currentIndex " + currentIndex);

        var trackToPlay = shuffle ? shufflePlaylist[currentIndex] : currentPlaylist[currentIndex];
        setTrack(trackToPlay, currentPlaylist, true);
    }

    function setRepeat() {
        repeat = !repeat;
        var imageName = repeat ? "repeat-active.png" : "repeat.png";
        $(".controlButton.repeat img").attr("src", "../Content/images/icons/" + imageName);
    }

    function setMute() {
        audioElement.audio.muted = !audioElement.audio.muted;
        var imageName = audioElement.audio.muted ? "volume-mute.png" : "volume.png";
        $(".controlButton.volume img").attr("src", "../Content/images/icons/" + imageName);
    }

    function setShuffle() {
        shuffle = !shuffle;
        var imageName = shuffle ? "shuffle-active.png" : "shuffle.png";
        $(".controlButton.shuffle img").attr("src", "../Content/images/icons/" + imageName);

        if (shuffle == true) {
            //Randomize playlist
            shuffleArray(shufflePlaylist);
            currentIndex = shufflePlaylist.indexOf(audioElement.currentlyPlaying.id);
        }
        else {
            //shuffle has been deactivated
            //go back to regular playlist
            currentIndex = currentPlaylist.indexOf(audioElement.currentlyPlaying.id);
        }

    }

    function shuffleArray(a) {
        var j, x, i;
        for (i = a.length; i; i--) {
            j = Math.floor(Math.random() * i);
            x = a[i - 1];
            a[i - 1] = a[j];
            a[j] = x;
        }
    }


    function setTrack(trackId, newPlaylist, play) {

        console.log("********** setTrack(trackId, newPlaylist, play) **************** ");

        if (newPlaylist != currentPlaylist) {
            currentPlaylist = newPlaylist;
            shufflePlaylist = currentPlaylist.slice();
            shuffleArray(shufflePlaylist);
        }

        if (shuffle == true) {
            currentIndex = shufflePlaylist.indexOf(trackId);
        }
        else {
            currentIndex = currentPlaylist.indexOf(trackId);
        }
        pauseSong();
        console.log("** ** *PRIES* ** **");
        console.log(trackId);
        console.log("** ** *currentPlaylist* ** **");
        console.log(currentPlaylist);

        $.post("../getSongJson", { songId: trackId }, function (data) {

            var track = data; //JSON.parse(data);
            $(".trackName span").text(track.title);

            $.post("../getArtistJson", { artistId: track.artist }, function (data) {
                var artist = data; //JSON.parse(data);
                $(".trackInfo .artistName span").text(artist.name);
                $(".trackInfo .artistName span").attr("onclick", "openPage('artist?id=" + artist.id + "')");
            });

            $.post("../getAlbumJson", { albumId: track.album }, function (data) {
                var album = data; //JSON.parse(data);
                $(".content .albumLink img").attr("src", "../content/images/artwork/" + album.artworkPath);
                $(".content .albumLink img").attr("onclick", "openPage('album.php?id=" + album.id + "')");
                $(".trackInfo .trackName span").attr("onclick", "openPage('album.php?id=" + album.id + "')");
            });


            audioElement.setTrack(track);

            if (play == true) {
                playSong();
            }
        });

    }

    function playSong() {
        console.log("************* playSong() *********************");
        if (audioElement.audio.currentTime == 0) {
            console.log("songId: audioElement.currentlyPlaying.id");
            console.log(audioElement.currentlyPlaying.id);
            $.post("../updatePlays", { songId: audioElement.currentlyPlaying.id });
        }

        $(".controlButton.play").hide();
        $(".controlButton.pause").show();
        audioElement.play();
    }

    function pauseSong() {
        $(".controlButton.play").show();
        $(".controlButton.pause").hide();
        audioElement.pause();
    }
</script>

<div id="nowPlayingBarContainer">

    <div id="nowPlayingBar">

        <div id="nowPlayingLeft">
            <div class="content">
                <span class="albumLink">
                    <img role="link" tabindex="0" src="" class="albumArtwork">
                </span>

                <div class="trackInfo">

                    <span class="trackName">
                        <span role="link" tabindex="0"></span>
                    </span>

                    <span class="artistName">
                        <span role="link" tabindex="0"></span>
                    </span>

                </div>

            </div>
        </div>

        <div id="nowPlayingCenter">

            <div class="content playerControls">

                <div class="buttons">

                    <button class="controlButton shuffle" title="Shuffle button" onclick="setShuffle()">
                        <img src="~/Content/images/icons/shuffle.png" alt="Shuffle"/>
                    </button>

                    <button class="controlButton previous" title="Previous button" onclick="prevSong()">
                        <img src="~/Content/images/icons/previous.png" alt="Previous" />
                    </button>

                    <button class="controlButton play" title="Play button" onclick="playSong()">
                        <img src="~/Content/images/icons/play.png" alt="Play"/>
                    </button>

                    <button class="controlButton pause" title="Pause button" style="display: none;" onclick="pauseSong()">
                        <img src="~/Content/images/icons/pause.png" alt="Pause"/>
                    </button>

                    <button class="controlButton next" title="Next button" onclick="nextSong()">
                        <img src="~/Content/images/icons/next.png" alt="Next"/>
                    </button>

                    <button class="controlButton repeat" title="Repeat button" onclick="setRepeat()">
                        <img src="~/Content/images/icons/repeat.png" alt="Repeat"/>
                    </button>

                </div>


                <div class="playbackBar">

                    <span class="progressTime current">0.00</span>

                    <div class="progressBar">
                        <div class="progressBarBg">
                            <div class="progress"></div>
                        </div>
                    </div>

                    <span class="progressTime remaining">0.00</span>


                </div>


            </div>


        </div>

        <div id="nowPlayingRight">
            <div class="volumeBar">

                <button class="controlButton volume" title="Volume button" onclick="setMute()">
                    <img src="~/Content/images/icons/volume.png" alt="Volume"/>
                </button>

                <div class="progressBar">
                    <div class="progressBarBg">
                        <div class="progress"></div>
                    </div>
                </div>

            </div>
        </div>

    </div>

</div>
